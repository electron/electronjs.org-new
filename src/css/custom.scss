/* stylelint-disable docusaurus/copyright-header */
/**
 * Any CSS included here will be global. The classic template
 * bundles Infima by default. Infima is a CSS framework designed to
 * work well for content-centric websites.
 */

/* You can override the default Infima variables here. */

/* We maintain separate colours for light and dark mode */
:root {
  --ifm-color-primary: #0057C2;
  --ifm-color-primary-dark: #000885;
  --ifm-color-primary-darker: #000047;
  --ifm-color-primary-darkest: #000000;
  --ifm-color-primary-light: #00aeff;
  --ifm-color-primary-lighter: #4CC8FF;
  --ifm-color-primary-lightest: #97E1FF;
  --ifm-code-font-size: 95%;
  --electron-color-light: #9feaf9;
  --electron-color-dark: #2b2e3b;
}

:root[data-theme='dark'] {
  --ifm-color-primary: #00aeff;
  --ifm-color-primary-dark: #0057C2;
  --ifm-color-primary-darker: #4d4d4f;
  --ifm-color-primary-darkest: #000047;
  --ifm-color-primary-light: #4CC8FF;
  --ifm-color-primary-lighter: #97E1FF;
  --ifm-color-primary-lightest: #E3F7FF;
}


// Homepage hero -----------------------------

.hero--electron {
  color: var(--electron-color-light);
  background: var(--electron-color-dark);
}

.hero-image {
  margin: 0 auto;
  backface-visibility: hidden;

  animation: hero-animation 0.5s forwards;
}

@keyframes hero-animation {
  0% { opacity: 0; transform: scale(0.96); }
  100% { opacity: 1; transform: scale(1); }
}

// Electron Icon

$hero-icon-delay: 0.6s;
$hero-icon-delay-diff: 0.1s;
$hero-icon-duration: 1s;
$hero-icon-all-delay: 9 * $hero-icon-delay-diff + $hero-icon-delay;

.hero-icon {
  transform-origin: 50% 50%;
  stroke: var(--electron-color-light);
  stroke-width: 5;
  stroke-linecap: round;
}

.hero-icon.dot {
  fill: var(--electron-color-light);
}

.hero-icon--line {
  stroke-dasharray: 170;
  stroke-dashoffset: 170;
}

.hero-icon--circle {
  stroke-dasharray: 70;
  stroke-dashoffset: 70;
}

@for $i from 1 through 9 {
  .hero-icon-#{$i} {
    $_duration: $hero-icon-duration;
    $_delay:   $hero-icon-delay + ($hero-icon-delay-diff * $i);

    animation: hero-icon-animation $_duration $_delay cubic-bezier(0.05, 0.35, 0.2, 1) forwards;
  }
}

@keyframes hero-icon-animation {
  100% { stroke-dashoffset: 0; }
}

// Apps ----------------

.hero-app {
  fill: var(--electron-color-light);
  transform-origin: 50% 50%;
}

// Ripple effect
$hero-app-delay: $hero-icon-all-delay;
$hero-app-delay-diff: 0.04s;
$hero-app-duration: 0.8s;
$hero-app-opacity: 0.1;

@keyframes hero-app-animate-left {
  0% { transform: scale(1)   translateX(30px); opacity: $hero-app-opacity; animation-timing-function: cubic-bezier(0.3, 0.1, 0.9, 0.5); }
  20% { transform: scale(1.1) translateX(20px); animation-timing-function: cubic-bezier(0.1, 0.4, 0.2, 1); }
  100% { transform: scale(1)   translateX(0); opacity: 1; }
}

@keyframes hero-app-animate-right {
  0% { transform: scale(1)   translateX(-30px); opacity: $hero-app-opacity; animation-timing-function: cubic-bezier(0.3, 0.1, 0.9, 0.5); }
  20% { transform: scale(1.1) translateX(-20px); animation-timing-function: cubic-bezier(0.1, 0.4, 0.2, 1); }
  100% { transform: scale(1)   translateX(0); opacity: 1; }
}

// Colorize and animate
@for $i from 1 through 15 {
  .hero-app-#{$i} {
    $_delay: $hero-app-delay + ($hero-app-delay-diff * $i);

    @if $i % 2 == 0 {
      animation: hero-app-animate-left $hero-app-duration $_delay both;
    }

    @else {
      animation: hero-app-animate-right $hero-app-duration $_delay both;
    }
  }
}

.docusaurus-highlight-code-line {
  background-color: rgb(72, 77, 91);
  display: block;
  margin: 0 calc(-1 * var(--ifm-pre-padding));
  padding: 0 var(--ifm-pre-padding);
}

.footer--dark {
  --ifm-footer-background-color: black;
}

.markdown a {
  font-weight: var(--ifm-font-weight-bold);
}
